{"ast":null,"code":"var _jsxFileName = \"/Users/gobinath/Documents/projects/miden/homepage/interactive-roadmap/roadmap/roadmap/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ArcherContainer, ArcherElement } from 'react-archer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selected, setSelected] = useState('User experience');\n  const [isOpen, setIsOpen] = useState(false);\n  const options = ['User experience', 'Developer experience', 'Core protocol', 'ZK L2', 'Full roadmap'];\n  const calculateAverageProgress = items => {\n    if (!items.length) return 0;\n    const sum = items.reduce((acc, item) => acc + item.progress, 0);\n    return Math.round(sum / items.length);\n  };\n  const combineRoadmapItems = () => {\n    const sections = ['User experience', 'Developer experience', 'Core protocol', 'ZK L2'];\n    const combinedColumns = [];\n\n    // First, collect all items with their section info\n    const allItems = sections.flatMap((section, sectionIndex) => {\n      return gridItems[section].columns.flatMap((column, columnIndex) => {\n        return column.map(item => ({\n          ...item,\n          section,\n          sectionIndex,\n          columnIndex\n        }));\n      });\n    });\n\n    // Group items by their progress range\n    const progressGroups = {\n      completed: allItems.filter(item => item.progress === 100),\n      inProgress: allItems.filter(item => item.progress > 0 && item.progress < 100),\n      notStarted: allItems.filter(item => item.progress === 0)\n    };\n\n    // Create columns based on progress groups\n    combinedColumns.push(progressGroups.completed);\n    combinedColumns.push(progressGroups.inProgress);\n    combinedColumns.push(progressGroups.notStarted);\n    return {\n      columns: combinedColumns\n    };\n  };\n  const renderRoadmapBox = item => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roadmap-box progress-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          width: `${item.progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roadmap-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"box-title\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sub-items\",\n          children: item.items.map((subItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sub-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: subItem.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sub-progress\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-progress-bar\",\n                style: {\n                  width: `${subItem.progress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  };\n  const gridItems = {\n    'User experience': {\n      columns: [[{\n        name: 'Typescript SDK',\n        progress: 75,\n        relations: [{\n          targetId: 'Wallet',\n          targetAnchor: 'left',\n          sourceAnchor: 'right',\n          style: {\n            strokeColor: '#94a3b8',\n            strokeWidth: 2,\n            arrowLength: 8,\n            arrowThickness: 2\n          }\n        }]\n      }, {\n        name: 'WebGPU proving',\n        progress: 85,\n        relations: [{\n          targetId: 'Wallet',\n          targetAnchor: 'left',\n          sourceAnchor: 'right',\n          style: {\n            strokeColor: '#94a3b8',\n            strokeWidth: 2,\n            arrowLength: 8,\n            arrowThickness: 2\n          }\n        }]\n      }], [{\n        name: 'Wallet',\n        progress: 60\n      }, {\n        name: 'Delegated transaction proving',\n        progress: 100\n      }, {\n        name: 'Block explorer',\n        progress: 60\n      }]]\n    },\n    'Developer experience': {\n      columns: [[{\n        name: 'Offset-based storage',\n        progress: 40,\n        relations: [{\n          targetId: 'Account components',\n          targetAnchor: 'left',\n          sourceAnchor: 'right',\n          style: {\n            strokeColor: '#94a3b8',\n            strokeWidth: 2,\n            arrowLength: 8,\n            arrowThickness: 2\n          }\n        }]\n      }], [{\n        name: 'Decorator refactoring',\n        progress: 50,\n        relations: [{\n          targetId: 'Debugging',\n          targetAnchor: 'left',\n          sourceAnchor: 'right',\n          style: {\n            strokeColor: '#94a3b8',\n            strokeWidth: 2,\n            arrowLength: 8,\n            arrowThickness: 2\n          }\n        }]\n      }, {\n        name: 'Source code mapping',\n        progress: 0,\n        relations: [{\n          targetId: 'Debugging',\n          targetAnchor: 'left',\n          sourceAnchor: 'right',\n          style: {\n            strokeColor: '#94a3b8',\n            strokeWidth: 2,\n            arrowLength: 8,\n            arrowThickness: 2\n          }\n        }]\n      }, {\n        name: 'Miden SDK',\n        progress: 50,\n        relations: [{\n          targetId: 'Rust compiler',\n          targetAnchor: 'left',\n          sourceAnchor: 'right',\n          style: {\n            strokeColor: '#94a3b8',\n            strokeWidth: 2,\n            arrowLength: 8,\n            arrowThickness: 2\n          }\n        }]\n      }, {\n        name: 'Miden Rust bindings',\n        progress: 50,\n        relations: [{\n          targetId: 'Rust compiler',\n          targetAnchor: 'left',\n          sourceAnchor: 'right',\n          style: {\n            strokeColor: '#94a3b8',\n            strokeWidth: 2,\n            arrowLength: 8,\n            arrowThickness: 2\n          }\n        }]\n      }, {\n        name: 'Element addressable memory',\n        progress: 100,\n        relations: [{\n          targetId: 'Rust compiler',\n          targetAnchor: 'left',\n          sourceAnchor: 'right',\n          style: {\n            strokeColor: '#94a3b8',\n            strokeWidth: 2,\n            arrowLength: 8,\n            arrowThickness: 2\n          }\n        }]\n      }, {\n        name: 'Read only memory',\n        progress: 15,\n        relations: [{\n          targetId: 'Rust compiler',\n          targetAnchor: 'left',\n          sourceAnchor: 'right',\n          style: {\n            strokeColor: '#94a3b8',\n            strokeWidth: 2,\n            arrowLength: 8,\n            arrowThickness: 2\n          }\n        }]\n      }, {\n        name: 'Account component templates',\n        progress: 90,\n        relations: [{\n          targetId: 'Packaging',\n          targetAnchor: 'left',\n          sourceAnchor: 'right',\n          style: {\n            strokeColor: '#94a3b8',\n            strokeWidth: 2,\n            arrowLength: 8,\n            arrowThickness: 2\n          }\n        }]\n      }, {\n        name: 'Account components',\n        progress: 100,\n        relations: [{\n          targetId: 'Packaging',\n          targetAnchor: 'left',\n          sourceAnchor: 'right',\n          style: {\n            strokeColor: '#94a3b8',\n            strokeWidth: 2,\n            arrowLength: 8,\n            arrowThickness: 2\n          }\n        }]\n      }, {\n        name: 'Efficient ECDSA signatures',\n        progress: 0,\n        relations: [{\n          targetId: 'Oracles',\n          targetAnchor: 'left',\n          sourceAnchor: 'right',\n          style: {\n            strokeColor: '#94a3b8',\n            strokeWidth: 2,\n            arrowLength: 8,\n            arrowThickness: 2\n          }\n        }]\n      }], [{\n        name: 'Developer playground',\n        progress: 40\n      }, {\n        name: 'Debugging',\n        progress: 0\n      }, {\n        name: 'Rust compiler',\n        progress: 60\n      }, {\n        name: 'Packaging',\n        progress: 80\n      }, {\n        name: 'Rate limits',\n        progress: 0\n      }, {\n        name: 'Oracles',\n        progress: 25\n      }]]\n    },\n    'Core protocol': {\n      columns: [[{\n        name: 'Transaction recency conditions',\n        progress: 100\n      }, {\n        name: 'Foreigh procedure invocation',\n        progress: 100\n      }], [{\n        name: 'Computing deltas in kernel',\n        progress: 0\n      }, {\n        name: 'Storage arrays',\n        progress: 0\n      }, {\n        name: 'Account-ID size',\n        progress: 100\n      }, {\n        name: 'Fees',\n        progress: 15\n      }, {\n        name: 'STARK-based signatures',\n        progress: 70\n      }]]\n    },\n    'ZK L2': {\n      columns: [[{\n        name: 'Airscript',\n        progress: 85\n      }, {\n        name: 'Circuit evaluation chiplet',\n        progress: 30\n      }], [{\n        name: 'Recursive proof verification',\n        progress: 60\n      }], [{\n        name: 'Batch kernel',\n        progress: 55\n      }], [{\n        name: 'Parallel state updates',\n        progress: 40\n      }, {\n        name: 'Distributed provers',\n        progress: 70\n      }, {\n        name: 'CUDA accleration',\n        progress: 90\n      }, {\n        name: 'Block kernel',\n        progress: 50\n      }, {\n        name: 'Efficient Keccak',\n        progress: 20\n      }], [{\n        name: 'Node performance',\n        progress: 0\n      }, {\n        name: 'Execution proofs',\n        progress: 0\n      }, {\n        name: 'Network transactions',\n        progress: 0\n      }, {\n        name: 'AggLayer integration',\n        progress: 0\n      }, {\n        name: 'LxLy-bridge/DA',\n        progress: 0\n      }]]\n    }\n  };\n  gridItems['Full roadmap'] = combineRoadmapItems();\n  const renderBox = (item, relations = []) => {\n    return /*#__PURE__*/_jsxDEV(ArcherElement, {\n      id: item.name,\n      relations: relations,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box progress-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: `${item.progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"box-content\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dropdown-button\",\n        onClick: () => setIsOpen(!isOpen),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: selected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: `chevron ${isOpen ? 'rotate' : ''}`,\n            width: \"20\",\n            height: \"20\",\n            viewBox: \"0 0 20 20\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M6 8l4 4 4-4\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu\",\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `menu-item ${option === selected ? 'active' : ''}`,\n          onClick: () => {\n            setSelected(option);\n            setIsOpen(false);\n          },\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ArcherContainer, {\n      strokeColor: \"#94a3b8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `grid ${selected === 'Developer experience' ? 'three-columns' : ''}`,\n        children: gridItems[selected].columns.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: column.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: renderBox(item, item.relations || [])\n          }, itemIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 17\n          }, this))\n        }, columnIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 345,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+7xsBLG61dyWBVM5vePfnMZqB54=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ArcherContainer","ArcherElement","jsxDEV","_jsxDEV","App","_s","selected","setSelected","isOpen","setIsOpen","options","calculateAverageProgress","items","length","sum","reduce","acc","item","progress","Math","round","combineRoadmapItems","sections","combinedColumns","allItems","flatMap","section","sectionIndex","gridItems","columns","column","columnIndex","map","progressGroups","completed","filter","inProgress","notStarted","push","renderRoadmapBox","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","name","subItem","index","relations","targetId","targetAnchor","sourceAnchor","strokeColor","strokeWidth","arrowLength","arrowThickness","renderBox","id","onClick","height","viewBox","d","fill","stroke","strokeLinecap","option","itemIndex","_c","$RefreshReg$"],"sources":["/Users/gobinath/Documents/projects/miden/homepage/interactive-roadmap/roadmap/roadmap/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ArcherContainer, ArcherElement } from 'react-archer';\nimport './App.css';\n\nfunction App() {\n  const [selected, setSelected] = useState('User experience');\n  const [isOpen, setIsOpen] = useState(false);\n\n  const options = [\n    'User experience',\n    'Developer experience',\n    'Core protocol',\n    'ZK L2',\n    'Full roadmap'\n  ];\n\n  \n  const calculateAverageProgress = (items) => {\n    if (!items.length) return 0;\n    const sum = items.reduce((acc, item) => acc + item.progress, 0);\n    return Math.round(sum / items.length);\n  };\n\n  const combineRoadmapItems = () => {\n    const sections = ['User experience', 'Developer experience', 'Core protocol', 'ZK L2'];\n    const combinedColumns = [];\n    \n    // First, collect all items with their section info\n    const allItems = sections.flatMap((section, sectionIndex) => {\n      return gridItems[section].columns.flatMap((column, columnIndex) => {\n        return column.map(item => ({\n          ...item,\n          section,\n          sectionIndex,\n          columnIndex\n        }));\n      });\n    });\n\n    // Group items by their progress range\n    const progressGroups = {\n      completed: allItems.filter(item => item.progress === 100),\n      inProgress: allItems.filter(item => item.progress > 0 && item.progress < 100),\n      notStarted: allItems.filter(item => item.progress === 0)\n    };\n\n    // Create columns based on progress groups\n    combinedColumns.push(progressGroups.completed);\n    combinedColumns.push(progressGroups.inProgress);\n    combinedColumns.push(progressGroups.notStarted);\n\n    return { columns: combinedColumns };\n  };\n\n  const renderRoadmapBox = (item) => {\n    return (\n      <div className=\"roadmap-box progress-box\">\n        <div \n          className=\"progress-bar\" \n          style={{ width: `${item.progress}%` }}\n        ></div>\n        <div className=\"roadmap-content\">\n          <span className=\"box-title\">{item.name}</span>\n          <div className=\"sub-items\">\n            {item.items.map((subItem, index) => (\n              <div key={index} className=\"sub-item\">\n                <span>{subItem.name}</span>\n                <div className=\"sub-progress\">\n                  <div \n                    className=\"sub-progress-bar\"\n                    style={{ width: `${subItem.progress}%` }}\n                  ></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n\n  const gridItems = {\n    'User experience': {\n      columns: [\n        [\n          { name: 'Typescript SDK', \n            progress: 75,\n            relations: [{\n              targetId: 'Wallet',\n              targetAnchor: 'left',\n              sourceAnchor: 'right',\n              style: { \n                strokeColor: '#94a3b8',\n                strokeWidth: 2,\n                arrowLength: 8,\n                arrowThickness: 2\n              }\n            }] \n          },\n          { name: 'WebGPU proving', \n            progress: 85,\n            relations: [{\n              targetId: 'Wallet',\n              targetAnchor: 'left',\n              sourceAnchor: 'right',\n              style: { \n                strokeColor: '#94a3b8',\n                strokeWidth: 2,\n                arrowLength: 8,\n                arrowThickness: 2\n              }\n            }]   \n          }\n        ],\n        [\n          { name: 'Wallet', progress: 60 },\n          { name: 'Delegated transaction proving', \n            progress: 100 },\n          { name: 'Block explorer', progress: 60 }\n        ]\n      ]\n    },\n    'Developer experience': {\n      columns: [\n        [\n          { name: 'Offset-based storage', \n            progress: 40, \n            relations: [{\n              targetId: 'Account components',\n              targetAnchor: 'left',\n              sourceAnchor: 'right',\n              style: { \n                strokeColor: '#94a3b8',\n                strokeWidth: 2,\n                arrowLength: 8,\n                arrowThickness: 2\n            }\n          }]  \n        },\n        ],\n        [\n          { name: 'Decorator refactoring', \n            progress: 50, \n            relations: [{\n              targetId: 'Debugging',\n              targetAnchor: 'left',\n              sourceAnchor: 'right',\n              style: { \n                strokeColor: '#94a3b8',\n                strokeWidth: 2,\n                arrowLength: 8,\n                arrowThickness: 2\n            }\n          }]  \n           },\n          { name: 'Source code mapping', \n            progress: 0, \n            relations: [{\n              targetId: 'Debugging',\n              targetAnchor: 'left',\n              sourceAnchor: 'right',\n              style: { \n                strokeColor: '#94a3b8',\n                strokeWidth: 2,\n                arrowLength: 8,\n                arrowThickness: 2\n            }\n          }]   \n        },\n          { name: 'Miden SDK', \n            progress: 50, \n            relations: [{\n            targetId: 'Rust compiler',\n            targetAnchor: 'left',\n            sourceAnchor: 'right',\n            style: { \n              strokeColor: '#94a3b8',\n              strokeWidth: 2,\n              arrowLength: 8,\n              arrowThickness: 2\n          }\n        }]    \n        },\n          { name: 'Miden Rust bindings', \n            progress: 50,\n            relations: [{\n              targetId: 'Rust compiler',\n              targetAnchor: 'left',\n              sourceAnchor: 'right',\n              style: { \n                strokeColor: '#94a3b8',\n                strokeWidth: 2,\n                arrowLength: 8,\n                arrowThickness: 2\n              }\n            }]    \n          },\n          { name: 'Element addressable memory', \n            progress: 100, \n            relations: [{\n              targetId: 'Rust compiler',\n              targetAnchor: 'left',\n              sourceAnchor: 'right',\n              style: { \n                strokeColor: '#94a3b8',\n                strokeWidth: 2,\n                arrowLength: 8,\n                arrowThickness: 2\n              }\n            }]   \n           },\n          { name: 'Read only memory', \n            progress: 15, \n            relations: [{\n              targetId: 'Rust compiler',\n              targetAnchor: 'left',\n              sourceAnchor: 'right',\n              style: { \n                strokeColor: '#94a3b8',\n                strokeWidth: 2,\n                arrowLength: 8,\n                arrowThickness: 2\n              }\n            }]    \n          },\n          { name: 'Account component templates', \n            progress: 90, \n            relations: [{\n              targetId: 'Packaging',\n              targetAnchor: 'left',\n              sourceAnchor: 'right',\n              style: { \n                strokeColor: '#94a3b8',\n                strokeWidth: 2,\n                arrowLength: 8,\n                arrowThickness: 2\n              }\n            }]    \n           },\n          { name: 'Account components', \n            progress: 100, \n            relations: [{\n              targetId: 'Packaging',\n              targetAnchor: 'left',\n              sourceAnchor: 'right',\n              style: { \n                strokeColor: '#94a3b8',\n                strokeWidth: 2,\n                arrowLength: 8,\n                arrowThickness: 2\n              }\n            }]   \n           },\n          { name: 'Efficient ECDSA signatures', \n            progress: 0,\n            relations: [{\n              targetId: 'Oracles',\n              targetAnchor: 'left',\n              sourceAnchor: 'right',\n              style: { \n                strokeColor: '#94a3b8',\n                strokeWidth: 2,\n                arrowLength: 8,\n                arrowThickness: 2\n              }\n            }]   \n          }\n        ],\n        [\n          { name: 'Developer playground', progress: 40 },\n          { name: 'Debugging', progress: 0 },\n          { name: 'Rust compiler', progress: 60 },\n          { name: 'Packaging', progress: 80 },\n          { name: 'Rate limits', progress: 0 },\n          { name: 'Oracles', progress: 25 }\n        ]\n      ]\n    },\n    'Core protocol': {\n      columns: [\n        [\n          { name: 'Transaction recency conditions', progress: 100 },\n          { name: 'Foreigh procedure invocation', progress: 100 },\n        ],\n        [\n          { name: 'Computing deltas in kernel', progress: 0 },\n          { name: 'Storage arrays', progress: 0 },\n          { name: 'Account-ID size', progress: 100 },\n          { name: 'Fees', progress: 15 },\n          { name: 'STARK-based signatures', progress: 70 }\n        ]\n      ]\n    },\n    'ZK L2': {\n      columns: [\n        [\n          { name: 'Airscript', progress: 85 },\n          { name: 'Circuit evaluation chiplet', progress: 30 },\n        ],\n        [\n          { name: 'Recursive proof verification', progress: 60 }\n        ],\n        [\n          { name: 'Batch kernel', progress: 55 },\n        ],\n        [\n          { name: 'Parallel state updates', progress: 40 },\n          { name: 'Distributed provers', progress: 70 },\n          { name: 'CUDA accleration', progress: 90 },\n          { name: 'Block kernel', progress: 50 },\n          { name: 'Efficient Keccak', progress: 20 }\n        ],\n        [\n          { name: 'Node performance', progress: 0 },\n          { name: 'Execution proofs', progress: 0 },\n          { name: 'Network transactions', progress: 0 },\n          { name: 'AggLayer integration', progress: 0 },\n          { name: 'LxLy-bridge/DA', progress: 0 }\n        ]\n      ]\n    }\n  };\n\n  gridItems['Full roadmap'] = combineRoadmapItems();\n  \n  const renderBox = (item, relations = []) => {\n    return (\n      <ArcherElement\n        id={item.name}\n        relations={relations}\n      >\n        <div className=\"box progress-box\">\n          <div \n            className=\"progress-bar\" \n            style={{ width: `${item.progress}%` }}\n          ></div>\n          <span className=\"box-content\">{item.name}</span>\n        </div>\n      </ArcherElement>\n    );\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"dropdown\">\n        <button \n          className=\"dropdown-button\"\n          onClick={() => setIsOpen(!isOpen)}\n        >\n          <div className=\"button-content\">\n            <span>{selected}</span>\n            <svg \n              className={`chevron ${isOpen ? 'rotate' : ''}`}\n              width=\"20\" \n              height=\"20\" \n              viewBox=\"0 0 20 20\"\n            >\n              <path \n                d=\"M6 8l4 4 4-4\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n              />\n            </svg>\n          </div>\n        </button>\n        \n        {isOpen && (\n          <div className=\"dropdown-menu\">\n            {options.map(option => (\n              <button\n                key={option}\n                className={`menu-item ${option === selected ? 'active' : ''}`}\n                onClick={() => {\n                  setSelected(option);\n                  setIsOpen(false);\n                }}\n              >\n                {option}\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <ArcherContainer strokeColor=\"#94a3b8\">\n        <div className={`grid ${selected === 'Developer experience' ? 'three-columns' : ''}`}>\n          {gridItems[selected].columns.map((column, columnIndex) => (\n            <div key={columnIndex} className=\"column\">\n              {column.map((item, itemIndex) => (\n                <div key={itemIndex}>\n                  {renderBox(item, item.relations || [])}\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n      </ArcherContainer>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}